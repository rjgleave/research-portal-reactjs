{"version":3,"sources":["components/Maps/MapsVector.js","components/Layout/ContentWrapper.js","components/Maps/VectorMap.js"],"names":["defaultColors","markerColor","bgColor","scaleColors","regionFill","RegionValues","MapsVector","state","series","regions","values","scale","normalizeFunction","markers","latLng","name","options","map","backgroundColor","zoomMin","zoomMax","zoomOnScroll","regionStyle","initial","hover","selected","fill","selectedHover","focusOn","x","y","markerStyle","stroke","onRegionLabelShow","e","el","code","html","className","height","this","Component","ContentWrapper","props","unwrap","children","defaultProps","VectorMap","setRef","node","mapElement","$","vectorMap","remove","ref","style"],"mappings":"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","file":"static/js/73.77fe8d62.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\n\r\nimport VectorMap from './VectorMap';\r\n\r\nconst defaultColors = {\r\n    markerColor:  '#23b7e5',      // the marker points\r\n    bgColor:      'transparent',  // the background\r\n    scaleColors:  ['#878c9a'],    // the color of the region in the serie\r\n    regionFill:   '#bbbec6'       // the base region color\r\n};\r\n\r\nconst RegionValues = {\r\n    'CA': 11100,   // Canada\r\n    'DE': 2510,    // Germany\r\n    'FR': 3710,    // France\r\n    'AU': 5710,    // Australia\r\n    'GB': 8310,    // Great Britain\r\n    'RU': 9310,    // Russia\r\n    'BR': 6610,    // Brazil\r\n    'IN': 7810,    // India\r\n    'CN': 4310,    // China\r\n    'US': 839,     // USA\r\n    'SA': 410      // Saudi Arabia\r\n}\r\n\r\nclass MapsVector extends Component {\r\n\r\n    state = {\r\n        series: {\r\n            regions: [{\r\n                values: RegionValues,\r\n                scale: defaultColors.scaleColors,\r\n                normalizeFunction: 'polynomial'\r\n            }]\r\n        },\r\n        markers: [\r\n            { latLng:[41.90, 12.45],  name:'Vatican City'          },\r\n            { latLng:[43.73, 7.41],   name:'Monaco'                },\r\n            { latLng:[-0.52, 166.93], name:'Nauru'                 },\r\n            { latLng:[-8.51, 179.21], name:'Tuvalu'                },\r\n            { latLng:[7.11,171.06],   name:'Marshall Islands'      },\r\n            { latLng:[17.3,-62.73],   name:'Saint Kitts and Nevis' },\r\n            { latLng:[3.2,73.22],     name:'Maldives'              },\r\n            { latLng:[35.88,14.5],    name:'Malta'                 },\r\n            { latLng:[41.0,-71.06],   name:'New England'           },\r\n            { latLng:[12.05,-61.75],  name:'Grenada'               },\r\n            { latLng:[13.16,-59.55],  name:'Barbados'              },\r\n            { latLng:[17.11,-61.85],  name:'Antigua and Barbuda'   },\r\n            { latLng:[-4.61,55.45],   name:'Seychelles'            },\r\n            { latLng:[7.35,134.46],   name:'Palau'                 },\r\n            { latLng:[42.5,1.51],     name:'Andorra'               }\r\n        ],\r\n        options: {\r\n            map: 'world_mill_en',\r\n            backgroundColor: defaultColors.bgColor,\r\n            zoomMin: 1,\r\n            zoomMax: 8,\r\n            zoomOnScroll: false,\r\n            regionStyle: {\r\n                initial: {\r\n                    'fill': defaultColors.regionFill,\r\n                    'fill-opacity': 1,\r\n                    'stroke': 'none',\r\n                    'stroke-width': 1.5,\r\n                    'stroke-opacity': 1\r\n                },\r\n                hover: {\r\n                    'fill-opacity': 0.8\r\n                },\r\n                selected: {\r\n                    fill: 'blue'\r\n                },\r\n                selectedHover: {}\r\n            },\r\n            focusOn: {\r\n                x: 0.4,\r\n                y: 0.6,\r\n                scale: 1\r\n            },\r\n            markerStyle: {\r\n                initial: {\r\n                    fill: defaultColors.markerColor,\r\n                    stroke: defaultColors.markerColor\r\n                }\r\n            },\r\n            onRegionLabelShow: (e, el, code) => {\r\n                if (RegionValues[code])\r\n                    el.html(el.html() + ': ' + RegionValues[code] + ' visitors');\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ContentWrapper>\r\n                <div className=\"content-heading\">\r\n                    <div>Vector Maps\r\n                        <small>Resolution independent maps</small>\r\n                    </div>\r\n                </div>\r\n                <VectorMap height=\"700px\" options={this.state.options} series={this.state.series} markers={this.state.markers}/>\r\n            </ContentWrapper>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MapsVector;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport $ from 'jquery';\r\n// jquery Vector Map\r\nimport 'ika.jvectormap/jquery-jvectormap-1.2.2.min.js';\r\nimport 'ika.jvectormap/jquery-jvectormap-world-mill-en.js';\r\nimport 'ika.jvectormap/jquery-jvectormap-us-mill-en.js';\r\nimport 'ika.jvectormap/jquery-jvectormap-1.2.2.css';\r\n\r\n/** Wrapper component for jquery-vectormap plugin */\r\nclass VectorMap extends Component {\r\n\r\n    static propTypes = {\r\n        /** series entry of options object */\r\n        series: PropTypes.object.isRequired,\r\n        /** markers entry of options object */\r\n        markers: PropTypes.array.isRequired,\r\n        /** jvectormap options object */\r\n        options: PropTypes.object.isRequired,\r\n        /** height of the container element */\r\n        height: PropTypes.string\r\n    }\r\n\r\n    static defaultProps = {\r\n        height: '300px'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.options.markers = this.props.markers;\r\n        this.props.options.series = this.props.series;\r\n        $(this.mapElement).vectorMap(this.props.options);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const map = $(this.mapElement).vectorMap('get', 'mapObject');\r\n        map.remove()\r\n    }\r\n\r\n    setRef = node => this.mapElement = node\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.setRef} style={{height: this.props.height}}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VectorMap;"],"sourceRoot":""}