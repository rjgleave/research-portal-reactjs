{"version":3,"sources":["components/Forms/FormUpload.js","components/Layout/ContentWrapper.js"],"names":["FormUpload","state","files","onDrop","acceptedFiles","setState","map","file","Object","assign","preview","URL","createObjectURL","createImageItem","index","md","className","src","alt","allFiles","this","href","rel","target","ref","length","Component","ContentWrapper","props","unwrap","children","defaultProps"],"mappings":"yMAKMA,E,4MAEFC,MAAQ,CACJC,MAAO,I,EAGXC,OAAS,SAAAC,GACL,EAAKC,SAAS,CACVH,MAAOE,EAAcE,KAAI,SAAAC,GAAI,OACzBC,OAAOC,OAAOF,EAAM,CAChBG,QAASC,IAAIC,gBAAgBL,W,EAM7CM,gBAAkB,SAACN,EAAMO,GAAP,OACd,cAAC,IAAD,CAAKC,GAAI,EAAT,SACI,qBAAKC,UAAU,iBAAiBC,IAAKV,EAAKG,QAASQ,IAAI,UAD1CJ,I,4CAKrB,WACI,IAAIK,EAAWC,KAAKnB,MAAMC,MAC1B,OACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAWc,UAAU,eAArB,UACI,oBAAGA,UAAU,cAAb,qBAAmC,uBAAK,qIAAyH,uBAAK,uBAAOA,UAAU,MAAjB,kGAAyG,gCAAO,mBAAGK,KAAK,6BAA6BC,IAAI,sBAAsBC,OAAO,SAAtE,uCACtR,eAAC,IAAD,CAAUP,UAAU,WAAWQ,IAAI,WAAWrB,OAAQiB,KAAKjB,OAA3D,UACI,qBAAKa,UAAU,kCAAf,+EACA,qBAAKA,UAAU,OAAf,SACKI,KAAKnB,MAAMC,MAAMuB,OAAS,EACvB,cAAC,IAAD,UAAMN,EAASb,IAAIc,KAAKP,mBAExB,8BAAK,mG,GAlCZa,aA6CV1B,a,iCClDf,gBAMM2B,EAAiB,SAAAC,GAAK,OACxB,qBAAKZ,UAAU,kBAAf,SACKY,EAAMC,OACF,qBAAKb,UAAU,SAAf,SAAyBY,EAAME,WAE/BF,EAAME,YASnBH,EAAeI,aAAe,CAC1BF,QAAQ,GAGGF","file":"static/js/92.93c0b879.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass FormUpload extends Component {\r\n\r\n    state = {\r\n        files: []\r\n    }\r\n\r\n    onDrop = acceptedFiles => {\r\n        this.setState({\r\n            files: acceptedFiles.map(file =>\r\n                Object.assign(file, {\r\n                    preview: URL.createObjectURL(file)\r\n                })\r\n            )\r\n        });\r\n    };\r\n\r\n    createImageItem = (file, index) => (\r\n        <Col md={3} key={index}>\r\n            <img className=\"img-fluid mb-2\" src={file.preview} alt=\"Item\"/>\r\n        </Col>\r\n    )\r\n\r\n    render() {\r\n        let allFiles = this.state.files;\r\n        return (\r\n            <ContentWrapper>\r\n                <Container className=\"container-md\">\r\n                    <p className=\"text-center\">Dropzone<br/><small>DropzoneJS is an open source library that provides drag&apos;n&apos;drop file uploads with image previews.</small><br/><small className=\"spr\">It’s lightweight, doesn’t depend on any other library (like jQuery) and is</small><small><a href=\"http://www.dropzonejs.com/\" rel=\"noopener noreferrer\" target=\"_blank\"> highly customizable</a></small></p>\r\n                    <Dropzone className=\"card p-3\" ref=\"dropzone\" onDrop={this.onDrop} >\r\n                        <div className=\"text-center box-placeholder m-0\">Try dropping some files here, or click to select files to upload.</div>\r\n                        <div className=\"mt-3\">\r\n                            {this.state.files.length > 0 ?\r\n                                <Row>{allFiles.map(this.createImageItem)}</Row>\r\n                                :\r\n                                <div><small>This demo does not upload files to any server.</small></div>\r\n                            }\r\n                        </div>\r\n                    </Dropzone>\r\n                </Container>\r\n            </ContentWrapper>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nexport default FormUpload;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n"],"sourceRoot":""}