{"version":3,"sources":["../node_modules/reactstrap/es/Form.js","components/Forms/FormWizard.Validation.js","components/Forms/FormWizard.Vertical.js","components/Forms/FormWizard.js","components/Layout/ContentWrapper.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardHeader.js","components/Forms/FormValidator.js"],"names":["propTypes","children","PropTypes","node","inline","bool","tag","tagPropType","innerRef","oneOfType","object","func","string","className","cssModule","Form","_Component","props","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","ref","render","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","Component","defaultProps","stepNavitemStyle","backgroundColor","FormWizardValidation","state","activeStep","formWizard","email","userName","password","password2","confirm","fname","surname","address","terms","toggleStep","form","formWizardRef","tabPane","document","getElementById","inputs","slice","querySelectorAll","FormValidator","bulkValidate","errors","hasError","setState","name","validateOnChange","event","input","target","value","type","checked","result","validate","formName","inputName","method","handleInputChange","currentTarget","handleSubmit","e","elements","filter","i","includes","nodeName","console","log","preventDefault","formRef","onSubmit","Card","CardHeader","CardBody","Nav","pills","justified","NavItem","style","NavLink","classnames","active","onClick","TabContent","activeTab","TabPane","id","tabId","htmlFor","Input","onChange","invalid","data-validate","data-param","Button","color","CustomInput","label","FormWizardVertical","done","alert","Row","Col","xs","vertical","FormWizard","ContentWrapper","unwrap","stringOrNumberProp","number","columnProps","shape","size","order","offset","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","colClasses","forEach","columnProp","isObject","_classNames","colSizeInterfix","colClass","push","_colClass","length","rowColsPropType","noGutters","inverse","body","outline","element","isCheckbox","Error","param","getAttribute","validations","JSON","parse","m","validator","isEmpty","isEmail","isNumeric","isInt","isAlphanumeric","isURL","value2","equals","isLength","min","max","toInt","list","isIn","Object","keys","some","val"],"mappings":"oQAQIA,EAAY,CACdC,SAAUC,IAAUC,KACpBC,OAAQF,IAAUG,KAClBC,IAAKC,IACLC,SAAUN,IAAUO,UAAU,CAACP,IAAUQ,OAAQR,IAAUS,KAAMT,IAAUU,SAC3EC,UAAWX,IAAUU,OACrBE,UAAWZ,IAAUQ,QAMnBK,EAAoB,SAAUC,GAGhC,SAASD,EAAKE,GACZ,IAAIC,EAKJ,OAHAA,EAAQF,EAAWG,KAAKC,KAAMH,IAAUG,MAClCC,OAASH,EAAMG,OAAOC,KAAKC,YAAuBL,IACxDA,EAAMM,OAASN,EAAMM,OAAOF,KAAKC,YAAuBL,IACjDA,EARTO,YAAeV,EAAMC,GAWrB,IAAIU,EAASX,EAAKY,UAgClB,OA9BAD,EAAOL,OAAS,SAAgBO,GAC1BR,KAAKH,MAAMT,UACbY,KAAKH,MAAMT,SAASoB,GAGtBR,KAAKQ,IAAMA,GAGbF,EAAOF,OAAS,WACVJ,KAAKQ,KACPR,KAAKQ,IAAIJ,UAIbE,EAAOG,OAAS,WACd,IAAIC,EAAcV,KAAKH,MACnBJ,EAAYiB,EAAYjB,UACxBC,EAAYgB,EAAYhB,UACxBV,EAAS0B,EAAY1B,OACrB2B,EAAMD,EAAYxB,IAClBE,EAAWsB,EAAYtB,SACvBwB,EAAaC,YAA8BH,EAAa,CAAC,YAAa,YAAa,SAAU,MAAO,aAEpGI,EAAUC,YAAgBC,IAAWvB,IAAWT,GAAS,eAAwBU,GACrF,OAAoBuB,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEJ,IAAKpB,EACLK,UAAWqB,MAIRnB,EA5Ce,CA6CtByB,aAEFzB,EAAKf,UAAYA,EACjBe,EAAK0B,aApDc,CACjBnC,IAAK,QAoDQS,Q,mHClDT2B,EAAmB,CACrBC,gBAAiB,WA0XNC,E,4MAtXXC,MAAQ,CACJC,WAAY,IAIZC,WAAY,CACRC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,MAAO,GACPC,QAAS,GACTC,QAAS,GACTC,OAAO,I,EAIfC,WAAa,SAAAX,GAAU,OAAI,WAGvB,IAAMY,EAAO,EAAKC,cAGZC,EAAUC,SAASC,eAAe,UAAY,EAAKjB,MAAMC,YACzDiB,EAAS,GAAGC,MAAM7C,KAAKyC,EAAQK,iBAAiB,iBAEtD,EAA6BC,IAAcC,aAAaJ,GAAhDK,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAGhB,EAAKC,SAAL,eACKZ,EAAKa,KADV,2BAEW,EAAK1B,MAAMa,EAAKa,OAF3B,IAGQH,aAKHC,GACG,EAAKxB,MAAMC,aAAeA,GAC1B,EAAKwB,SAAS,CACVxB,iB,EAWhB0B,iBAAmB,SAAAC,GAAU,IAAD,EAClBC,EAAQD,EAAME,OACdjB,EAAOgB,EAAMhB,KACbkB,EAAuB,aAAfF,EAAMG,KAAsBH,EAAMI,QAAUJ,EAAME,MAE1DG,EAASb,IAAcc,SAASN,GAEtC,EAAKJ,SAAL,eACKZ,EAAKa,KADV,2BAEW,EAAK1B,MAAMa,EAAKa,OAF3B,uBAGSG,EAAMH,KAAOK,GAHtB,kDAKe,EAAK/B,MAAMa,EAAKa,MAAMH,QALrC,kBAMaM,EAAMH,KAAOQ,KAN1B,O,EAaJV,SAAW,SAACY,EAAUC,EAAWC,GAC7B,OACI,EAAKtC,MAAMoC,IACX,EAAKpC,MAAMoC,GAAUb,QACrB,EAAKvB,MAAMoC,GAAUb,OAAOc,IAC5B,EAAKrC,MAAMoC,GAAUb,OAAOc,GAAWC,I,EAI/CC,kBAAoB,SAAAX,GAChB,IAAME,EAASF,EAAMY,cACfT,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC7DL,EAAOI,EAAOJ,KACpB,EAAKD,SAAL,eACKC,EAAOK,K,EAIhBU,aAAe,SAAAC,GACX,IAAM7B,EAAO6B,EAAEZ,OACTZ,EAAS,YAAIL,EAAK8B,UAAUC,QAAO,SAAAC,GAAC,MAAI,CAAC,QAAS,UAAUC,SAASD,EAAEE,aAE7E,EAA6B1B,IAAcC,aAAaJ,GAAhDK,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAEhB,EAAKC,SAAL,eACKZ,EAAKa,KADV,2BAEW,EAAK1B,MAAMa,EAAKa,OAF3B,IAGQH,aAIRyB,QAAQC,IAAIzB,EAAW,0BAA4B,mBAEnDkB,EAAEQ,kB,EAINC,QAAU,SAAA7F,GAAI,OAAK,EAAKwD,cAAgBxD,G,4CAExC,WACI,OACI,cAAC,EAAD,CAAMK,SAAUY,KAAK4E,QAASzB,KAAK,aAAa0B,SAAU7E,KAAKkE,aAA/D,SACI,eAACY,EAAA,EAAD,CAAMrF,UAAU,eAAhB,UACI,cAACsF,EAAA,EAAD,2CACA,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,OAAK,EAACC,WAAW,EAAtB,UACI,cAACC,EAAA,EAAD,CAASC,MAAO/D,EAAhB,SACI,cAACgE,EAAA,EAAD,CACIpG,IAAI,MACJO,UAAW8F,IAAW,CAClBC,OAAkC,MAA1BxF,KAAKyB,MAAMC,aAEvB+D,QAASzF,KAAKqC,WAAW,KAL7B,SAOI,qBAAI5C,UAAU,iBAAd,uBAEI,uBACA,iFAIZ,cAAC2F,EAAA,EAAD,CAASC,MAAO/D,EAAhB,SACI,cAACgE,EAAA,EAAD,CACIpG,IAAI,MACJO,UAAW8F,IAAW,CAClBC,OAAkC,MAA1BxF,KAAKyB,MAAMC,aAEvB+D,QAASzF,KAAKqC,WAAW,KAL7B,SAOI,qBAAI5C,UAAU,iBAAd,uBAEI,uBACA,iFAIZ,cAAC2F,EAAA,EAAD,CAASC,MAAO/D,EAAhB,SACI,cAACgE,EAAA,EAAD,CACIpG,IAAI,MACJO,UAAW8F,IAAW,CAClBC,OAAkC,MAA1BxF,KAAKyB,MAAMC,aAEvB+D,QAASzF,KAAKqC,WAAW,KAL7B,SAOI,qBAAI5C,UAAU,iBAAd,qBAEI,uBACA,iFAIZ,cAAC2F,EAAA,EAAD,CAASC,MAAO/D,EAAhB,SACI,cAACgE,EAAA,EAAD,CACIpG,IAAI,MACJO,UAAW8F,IAAW,CAClBC,OAAkC,MAA1BxF,KAAKyB,MAAMC,aAEvB+D,QAASzF,KAAKqC,WAAW,KAL7B,SAOI,qBAAI5C,UAAU,iBAAd,sBAEI,uBACA,sFAMpB,eAACiG,EAAA,EAAD,CAAYC,UAAW3F,KAAKyB,MAAMC,WAAlC,UACI,eAACkE,EAAA,EAAD,CAASC,GAAG,WAAWC,MAAM,IAA7B,UACI,qBAAKrG,UAAU,YAAf,SACI,qCACI,uBAAOsG,QAAQ,WAAf,yBACA,cAACC,EAAA,EAAD,CACIvC,KAAK,OACLoC,GAAG,WACH1C,KAAK,WACL8C,SAAUjG,KAAKoD,iBACf8C,QAASlG,KAAKiD,SACV,aACA,WACA,YAEJO,MAAOxD,KAAKyB,MAAME,WAAWE,SAC7BsE,gBAAc,iBAElB,sBAAM1G,UAAU,mBAAhB,+BACA,uBAAOsG,QAAQ,WAAf,wBACA,cAACC,EAAA,EAAD,CACIvC,KAAK,OACLoC,GAAG,WACH1C,KAAK,WACL+C,QAASlG,KAAKiD,SACV,aACA,WACA,YAEJgD,SAAUjG,KAAKoD,iBACfI,MAAOxD,KAAKyB,MAAME,WAAWG,SAC7BqE,gBAAc,iBAElB,sBAAM1G,UAAU,mBAAhB,+BACA,uBAAOsG,QAAQ,YAAf,gCACA,cAACC,EAAA,EAAD,CACIvC,KAAK,OACLoC,GAAG,YACH1C,KAAK,YACL+C,QAASlG,KAAKiD,SACV,aACA,YACA,WAEJgD,SAAUjG,KAAKoD,iBACf+C,gBAAc,cACdC,aAAW,WACX5C,MAAOxD,KAAKyB,MAAME,WAAWI,YAEjC,sBAAMtC,UAAU,mBAAhB,6CAGA,mDAGR,uBACA,qBAAKA,UAAU,SAAf,SAEI,cAAC4G,EAAA,EAAD,CACI5G,UAAU,UACV6G,MAAM,UACNb,QAASzF,KAAKqC,WAAW,KAH7B,uBASR,eAACuD,EAAA,EAAD,CAASC,GAAG,WAAWC,MAAM,IAA7B,UACI,qBAAKrG,UAAU,YAAf,SACI,qCACI,uBAAOsG,QAAQ,QAAf,0BACA,cAACC,EAAA,EAAD,CACIH,GAAG,QACHI,SAAUjG,KAAKoD,iBACf8C,QAASlG,KAAKiD,SAAS,aAAc,QAAS,YAC9CO,MAAOxD,KAAKyB,MAAME,WAAWM,MAC7BkB,KAAK,QACLM,KAAK,OACL0C,gBAAc,iBAElB,sBAAM1G,UAAU,mBAAhB,+BACA,uBAAOsG,QAAQ,UAAf,yBACA,cAACC,EAAA,EAAD,CACIH,GAAG,UACHI,SAAUjG,KAAKoD,iBACfI,MAAOxD,KAAKyB,MAAMS,QAClBgE,QAASlG,KAAKiD,SAAS,aAAc,UAAW,YAChDE,KAAK,UACLM,KAAK,OACL0C,gBAAc,iBAElB,sBAAM1G,UAAU,mBAAhB,+BACA,uBAAOsG,QAAQ,QAAf,qBACA,cAACC,EAAA,EAAD,CACIH,GAAG,QACHI,SAAUjG,KAAKoD,iBACfI,MAAOxD,KAAKyB,MAAMG,MAClBuB,KAAK,QACLM,KAAK,OACLyC,QACIlG,KAAKiD,SAAS,aAAc,QAAS,aACrCjD,KAAKiD,SAAS,aAAc,QAAS,SAEzCkD,gBAAc,wBACd1G,UAAU,mBAEbO,KAAKiD,SAAS,aAAc,QAAS,aAClC,sBAAMxD,UAAU,mBAAhB,+BAEHO,KAAKiD,SAAS,aAAc,QAAS,UAClC,sBAAMxD,UAAU,mBAAhB,uCAIJ,uBAAOsG,QAAQ,UAAf,qBACA,cAACC,EAAA,EAAD,CACIH,GAAG,UACHI,SAAUjG,KAAKoD,iBACfI,MAAOxD,KAAKyB,MAAMU,QAClBgB,KAAK,UACLM,KAAK,SAET,mDAGR,uBACA,sBAAKhE,UAAU,SAAf,UACI,cAAC4G,EAAA,EAAD,CAAQC,MAAM,YAAYb,QAASzF,KAAKqC,WAAW,KAAnD,sBAGA,cAACgE,EAAA,EAAD,CACI5G,UAAU,UACV6G,MAAM,UACNb,QAASzF,KAAKqC,WAAW,KAH7B,wBASR,eAACuD,EAAA,EAAD,CAASC,GAAG,WAAWC,MAAM,IAA7B,UACI,qBAAKrG,UAAU,YAAf,SACI,mCACI,mBAAGA,UAAU,mBAAb,+BAGR,uBACA,sBAAKA,UAAU,SAAf,UACI,cAAC4G,EAAA,EAAD,CAAQC,MAAM,YAAYb,QAASzF,KAAKqC,WAAW,KAAnD,sBAGA,cAACgE,EAAA,EAAD,CACI5G,UAAU,UACV6G,MAAM,UACNb,QAASzF,KAAKqC,WAAW,KAH7B,wBASR,eAACuD,EAAA,EAAD,CAASC,GAAG,WAAWC,MAAM,IAA7B,UACI,qBAAKrG,UAAU,YAAf,SACI,qCACI,mBAAGA,UAAU,OAAb,4BACA,cAAC8G,EAAA,EAAD,CACI9C,KAAK,WACLoC,GAAG,QACH1C,KAAK,QACLqD,MAAM,wCACNN,QAASlG,KAAKiD,SAAS,aAAc,QAAS,YAC9CgD,SAAUjG,KAAKoD,iBACf+C,gBAAc,eACdzC,QAAS1D,KAAKyB,MAAME,WAAWS,MARnC,SAUI,sBAAM3C,UAAU,mBAAhB,sCAIZ,uBACA,sBAAKA,UAAU,SAAf,UACI,cAAC4G,EAAA,EAAD,CAAQC,MAAM,YAAYb,QAASzF,KAAKqC,WAAW,KAAnD,sBAGA,cAACgE,EAAA,EAAD,CAAQ5G,UAAU,UAAU6G,MAAM,UAAU7C,KAAK,SAAjD,sC,GA3WGrC,a,kBCP7BE,EAAmB,CACrBC,gBAAiB,WAmJNkF,E,4MA/IXhF,MAAQ,CACJC,WAAY,K,EAGhBW,WAAa,SAAAX,GAAU,OAAI,WACnB,EAAKD,MAAMC,aAAeA,GAC1B,EAAKwB,SAAS,CACVxB,iB,EAKZgF,KAAO,WACHC,MAAM,4C,4CAGV,WACI,OACI,eAAC7B,EAAA,EAAD,CAAMrF,UAAU,eAAhB,UACI,cAACsF,EAAA,EAAD,oDACA,cAACC,EAAA,EAAD,UACI,eAAC4B,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAAC7B,EAAA,EAAD,CAAKC,OAAK,EAAC6B,UAAU,EAArB,UACI,cAAC3B,EAAA,EAAD,CAASC,MAAO/D,EAAhB,SACI,cAACgE,EAAA,EAAD,CACIpG,IAAI,MACJO,UAAW8F,IAAW,CAClBC,OAAkC,MAA1BxF,KAAKyB,MAAMC,aAEvB+D,QAASzF,KAAKqC,WAAW,KAL7B,SAOI,oBAAI5C,UAAU,iBAAd,+BAGR,cAAC2F,EAAA,EAAD,CAASC,MAAO/D,EAAhB,SACI,cAACgE,EAAA,EAAD,CACIpG,IAAI,MACJO,UAAW8F,IAAW,CAClBC,OAAkC,MAA1BxF,KAAKyB,MAAMC,aAEvB+D,QAASzF,KAAKqC,WAAW,KAL7B,SAOI,oBAAI5C,UAAU,iBAAd,gCAGR,cAAC2F,EAAA,EAAD,CAASC,MAAO/D,EAAhB,SACI,cAACgE,EAAA,EAAD,CACIpG,IAAI,MACJO,UAAW8F,IAAW,CAClBC,OAAkC,MAA1BxF,KAAKyB,MAAMC,aAEvB+D,QAASzF,KAAKqC,WAAW,KAL7B,SAOI,oBAAI5C,UAAU,iBAAd,oCAKhB,cAACoH,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpB,EAAA,EAAD,CAAYC,UAAW3F,KAAKyB,MAAMC,WAAYjC,UAAU,WAAxD,UACI,eAACmG,EAAA,EAAD,CAASE,MAAM,IAAf,UACI,qBAAKrG,UAAU,YAAf,SACI,qCACI,wCACA,oBAAGA,UAAU,OAAb,4HAGU,YAIlB,uBACA,qBAAKA,UAAU,SAAf,SAEI,cAAC4G,EAAA,EAAD,CACI5G,UAAU,UACV6G,MAAM,UACNb,QAASzF,KAAKqC,WAAW,KAH7B,uBASR,eAACuD,EAAA,EAAD,CAASE,MAAM,IAAf,UACI,qBAAKrG,UAAU,YAAf,SACI,qCACI,wCACA,oBAAGA,UAAU,OAAb,4HAGU,YAIlB,uBACA,sBAAKA,UAAU,SAAf,UACI,cAAC4G,EAAA,EAAD,CAAQC,MAAM,YAAYb,QAASzF,KAAKqC,WAAW,KAAnD,sBAGA,cAACgE,EAAA,EAAD,CACI5G,UAAU,UACV6G,MAAM,UACNb,QAASzF,KAAKqC,WAAW,KAH7B,wBASR,eAACuD,EAAA,EAAD,CAASE,MAAM,IAAf,UACI,qBAAKrG,UAAU,YAAf,SACI,qCACI,wCACA,oBAAGA,UAAU,OAAb,4HAGU,YAIlB,uBACA,sBAAKA,UAAU,SAAf,UACI,cAAC4G,EAAA,EAAD,CAAQC,MAAM,YAAYb,QAASzF,KAAKqC,WAAW,KAAnD,sBAGA,cAACgE,EAAA,EAAD,CACI5G,UAAU,UACV6G,MAAM,UACNb,QAASzF,KAAK0G,KAHlB,yC,GA9HPtF,aCd3B4F,E,4JACF,WACI,OACI,eAACC,EAAA,EAAD,WACI,qBAAKxH,UAAU,kBAAf,SACI,8CAEI,kGAIR,cAAC,EAAD,IAEA,cAAC,EAAD,W,GAbS2B,aAmBV4F,a,iCCzBf,gBAMMC,EAAiB,SAAApH,GAAK,OACxB,qBAAKJ,UAAU,kBAAf,SACKI,EAAMqH,OACF,qBAAKzH,UAAU,SAAf,SAAyBI,EAAMhB,WAE/BgB,EAAMhB,YASnBoI,EAAe5F,aAAe,CAC1B6F,QAAQ,GAGGD,O,iCCxBf,0EAOIE,EAAqBrI,IAAUO,UAAU,CAACP,IAAUsI,OAAQtI,IAAUU,SACtE6H,EAAcvI,IAAUO,UAAU,CAACP,IAAUG,KAAMH,IAAUsI,OAAQtI,IAAUU,OAAQV,IAAUwI,MAAM,CACzGC,KAAMzI,IAAUO,UAAU,CAACP,IAAUG,KAAMH,IAAUsI,OAAQtI,IAAUU,SACvEgI,MAAOL,EACPM,OAAQN,MAENvI,EAAY,CACdM,IAAKC,IACL2H,GAAIO,EACJK,GAAIL,EACJM,GAAIN,EACJO,GAAIP,EACJQ,GAAIR,EACJ5H,UAAWX,IAAUU,OACrBE,UAAWZ,IAAUQ,OACrBwI,OAAQhJ,IAAUiJ,OAEhB1G,EAAe,CACjBnC,IAAK,MACL4I,OApBc,CAAC,KAAM,KAAM,KAAM,KAAM,OAuBrCE,EAAqB,SAA4BC,EAAMC,EAAUC,GACnE,OAAgB,IAAZA,GAAgC,KAAZA,EACfF,EAAO,MAAQ,OAASC,EACV,SAAZC,EACFF,EAAO,WAAa,OAASC,EAAW,QAG1CD,EAAO,OAASE,EAAU,OAASD,EAAW,IAAMC,GAGzDtB,EAAM,SAAahH,GACrB,IAAIJ,EAAYI,EAAMJ,UAClBC,EAAYG,EAAMH,UAClBoI,EAASjI,EAAMiI,OACfnH,EAAMd,EAAMX,IACZ0B,EAAaC,YAA8BhB,EAAO,CAAC,YAAa,YAAa,SAAU,QAEvFuI,EAAa,GACjBN,EAAOO,SAAQ,SAAUH,EAAU5D,GACjC,IAAIgE,EAAazI,EAAMqI,GAGvB,UAFOtH,EAAWsH,GAEbI,GAA6B,KAAfA,EAAnB,CAIA,IAAIL,GAAQ3D,EAEZ,GAAIiE,YAASD,GAAa,CACxB,IAAIE,EAEAC,EAAkBR,EAAO,IAAM,IAAMC,EAAW,IAChDQ,EAAWV,EAAmBC,EAAMC,EAAUI,EAAWf,MAC7Da,EAAWO,KAAK5H,YAAgBC,MAAYwH,EAAc,IAAgBE,GAAYJ,EAAWf,MAA4B,KAApBe,EAAWf,KAAaiB,EAAY,QAAUC,EAAkBH,EAAWd,OAASc,EAAWd,OAA8B,IAArBc,EAAWd,MAAagB,EAAY,SAAWC,EAAkBH,EAAWb,QAAUa,EAAWb,QAAgC,IAAtBa,EAAWb,OAAce,IAAe9I,QAC/V,CACL,IAAIkJ,EAAYZ,EAAmBC,EAAMC,EAAUI,GAEnDF,EAAWO,KAAKC,QAIfR,EAAWS,QACdT,EAAWO,KAAK,OAGlB,IAAI7H,EAAUC,YAAgBC,IAAWvB,EAAW2I,GAAa1I,GACjE,OAAoBuB,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEnB,UAAWqB,MAIf+F,EAAIjI,UAAYA,EAChBiI,EAAIxF,aAAeA,EACJwF,O,iCClFf,0EAOIiC,EAAkBhK,IAAUO,UAAU,CAACP,IAAUsI,OAAQtI,IAAUU,SACnEZ,EAAY,CACdM,IAAKC,IACL4J,UAAWjK,IAAUG,KACrBQ,UAAWX,IAAUU,OACrBE,UAAWZ,IAAUQ,OACrBgD,KAAMxD,IAAUG,KAChB6H,GAAIgC,EACJpB,GAAIoB,EACJnB,GAAImB,EACJlB,GAAIkB,EACJjB,GAAIiB,GAEFzH,EAAe,CACjBnC,IAAK,MACL4I,OAhBiB,CAAC,KAAM,KAAM,KAAM,KAAM,OAmBxClB,EAAM,SAAa/G,GACrB,IAAIJ,EAAYI,EAAMJ,UAClBC,EAAYG,EAAMH,UAClBqJ,EAAYlJ,EAAMkJ,UAClBpI,EAAMd,EAAMX,IACZoD,EAAOzC,EAAMyC,KACbwF,EAASjI,EAAMiI,OACflH,EAAaC,YAA8BhB,EAAO,CAAC,YAAa,YAAa,YAAa,MAAO,OAAQ,WAEzGuI,EAAa,GACjBN,EAAOO,SAAQ,SAAUH,EAAU5D,GACjC,IAAI6D,EAAUtI,EAAMqI,GAGpB,UAFOtH,EAAWsH,GAEbC,EAAL,CAIA,IAAIF,GAAQ3D,EACZ8D,EAAWO,KAAKV,EAAO,YAAcE,EAAU,YAAcD,EAAW,IAAMC,OAEhF,IAAIrH,EAAUC,YAAgBC,IAAWvB,EAAWsJ,EAAY,aAAe,KAAMzG,EAAO,WAAa,MAAO8F,GAAa1I,GAC7H,OAAoBuB,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEnB,UAAWqB,MAIf8F,EAAIhI,UAAYA,EAChBgI,EAAIvF,aAAeA,EACJuF,O,iCCtDf,0EAMIhI,EAAY,CACdM,IAAKC,IACL6J,QAASlK,IAAUG,KACnBqH,MAAOxH,IAAUU,OACjByJ,KAAMnK,IAAUG,KAChBiK,QAASpK,IAAUG,KACnBQ,UAAWX,IAAUU,OACrBE,UAAWZ,IAAUQ,OACrBF,SAAUN,IAAUO,UAAU,CAACP,IAAUQ,OAAQR,IAAUU,OAAQV,IAAUS,QAM3EuF,EAAO,SAAcjF,GACvB,IAAIJ,EAAYI,EAAMJ,UAClBC,EAAYG,EAAMH,UAClB4G,EAAQzG,EAAMyG,MACd2C,EAAOpJ,EAAMoJ,KACbD,EAAUnJ,EAAMmJ,QAChBE,EAAUrJ,EAAMqJ,QAChBvI,EAAMd,EAAMX,IACZE,EAAWS,EAAMT,SACjBwB,EAAaC,YAA8BhB,EAAO,CAAC,YAAa,YAAa,QAAS,OAAQ,UAAW,UAAW,MAAO,aAE3HiB,EAAUC,YAAgBC,IAAWvB,EAAW,SAAQuJ,GAAU,eAAsBC,GAAO,cAAqB3C,IAAS4C,EAAU,SAAW,MAAQ,IAAM5C,GAAgB5G,GACpL,OAAoBuB,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEnB,UAAWqB,EACXN,IAAKpB,MAIT0F,EAAKlG,UAAYA,EACjBkG,EAAKzD,aAvBc,CACjBnC,IAAK,OAuBQ4F,O,iCCxCf,0EAMIlG,EAAY,CACdM,IAAKC,IACLM,UAAWX,IAAUU,OACrBE,UAAWZ,IAAUQ,OACrBF,SAAUN,IAAUO,UAAU,CAACP,IAAUQ,OAAQR,IAAUU,OAAQV,IAAUS,QAM3EyF,EAAW,SAAkBnF,GAC/B,IAAIJ,EAAYI,EAAMJ,UAClBC,EAAYG,EAAMH,UAClBN,EAAWS,EAAMT,SACjBuB,EAAMd,EAAMX,IACZ0B,EAAaC,YAA8BhB,EAAO,CAAC,YAAa,YAAa,WAAY,QAEzFiB,EAAUC,YAAgBC,IAAWvB,EAAW,aAAcC,GAClE,OAAoBuB,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEnB,UAAWqB,EACXN,IAAKpB,MAIT4F,EAASpG,UAAYA,EACrBoG,EAAS3D,aAnBU,CACjBnC,IAAK,OAmBQ8F,O,iCChCf,0EAMIpG,EAAY,CACdM,IAAKC,IACLM,UAAWX,IAAUU,OACrBE,UAAWZ,IAAUQ,QAMnByF,EAAa,SAAoBlF,GACnC,IAAIJ,EAAYI,EAAMJ,UAClBC,EAAYG,EAAMH,UAClBiB,EAAMd,EAAMX,IACZ0B,EAAaC,YAA8BhB,EAAO,CAAC,YAAa,YAAa,QAE7EiB,EAAUC,YAAgBC,IAAWvB,EAAW,eAAgBC,GACpE,OAAoBuB,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEnB,UAAWqB,MAIfiE,EAAWnG,UAAYA,EACvBmG,EAAW1D,aAjBQ,CACjBnC,IAAK,OAiBQ6F,O,gFCtBTjC,EAAgB,CAQlBc,SARkB,SAQTuF,GAEL,IAAMC,EAA8B,aAAjBD,EAAQ1F,KACrBD,EAAQ4F,EAAaD,EAAQzF,QAAUyF,EAAQ3F,MAGrD,IAFa2F,EAAQhG,KAEV,MAAM,IAAIkG,MAAM,iCAG3B,IAAMC,EAAQH,EAAQI,aAAa,cAC7BC,EAAcC,KAAKC,MAAMP,EAAQI,aAAa,kBAEhD5F,EAAS,GAwDb,OAvDG6F,GAAeA,EAAYX,QAG1BW,EAAYnB,SAAQ,SAAAsB,GAChB,OAAQA,GACJ,IAAK,WACDhG,EAAOgG,GAAKP,GAAuB,IAAV5F,EAAkBoG,IAAUC,QAAQrG,GAC7D,MACJ,IAAK,QACDG,EAAOgG,IAAMC,IAAUE,QAAQtG,GAC/B,MACJ,IAAK,SACDG,EAAOgG,IAAMC,IAAUG,UAAUvG,GACjC,MACJ,IAAK,UACDG,EAAOgG,IAAMC,IAAUI,MAAMxG,GAC7B,MACJ,IAAK,WACDG,EAAOgG,IAAMC,IAAUK,eAAezG,GACtC,MACJ,IAAK,MACDG,EAAOgG,IAAMC,IAAUM,MAAM1G,GAC7B,MACJ,IAAK,UAED,IAAM2G,EAAS1H,SAASC,eAAe4G,GAAO9F,MAC9CG,EAAOgG,IAAMC,IAAUQ,OAAO5G,EAAO2G,GACrC,MACJ,IAAK,SACDxG,EAAOgG,IAAMC,IAAUS,SAAS7G,EAAO,CAAE8G,IAAKhB,IAC9C,MACJ,IAAK,SACD3F,EAAOgG,IAAMC,IAAUS,SAAS7G,EAAO,CAAE+G,IAAKjB,IAC9C,MACJ,IAAK,MACD,MAAmBG,KAAKC,MAAMJ,GAA9B,mBAAOgB,EAAP,KAAYC,EAAZ,KACA5G,EAAOgG,IAAMC,IAAUS,SAAS7G,EAAO,CAAE8G,MAAKC,QAC9C,MACJ,IAAK,MACD5G,EAAOgG,IAAMC,IAAUI,MAAMxG,EAAO,CAAE8G,IAAKV,IAAUY,MAAMlB,KAC3D,MACJ,IAAK,MACD3F,EAAOgG,IAAMC,IAAUI,MAAMxG,EAAO,CAAE+G,IAAKX,IAAUY,MAAMlB,KAC3D,MACJ,IAAK,OACD,IAAMmB,EAAOhB,KAAKC,MAAMJ,GACxB3F,EAAOgG,IAAMC,IAAUc,KAAKlH,EAAOiH,GACnC,MACJ,QACI,MAAM,IAAIpB,MAAM,+BAMzB1F,GAUXZ,aAtFkB,SAsFLJ,GAAS,IAAD,OACbK,EAAS,GACTC,GAAW,EAQf,OANAN,EAAO0F,SAAQ,SAAA/E,GACX,IAAIK,EAAS,EAAKC,SAASN,GAC3BN,EAAM,2BAAQA,GAAR,kBAAiBM,EAAMH,KAAOQ,IAC/BV,IAAUA,EAAW0H,OAAOC,KAAKjH,GAAQkH,MAAK,SAAAC,GAAG,OAAInH,EAAOmH,UAG9D,CACH9H,SACAC,cAKGH","file":"static/js/35.35561de2.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import React, { Component } from 'react';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Input,\r\n    TabContent,\r\n    TabPane,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Button,\r\n    Form,\r\n    CustomInput\r\n} from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nimport FormValidator from './FormValidator.js';\r\n\r\nconst stepNavitemStyle = {\r\n    backgroundColor: '#fcfcfc'\r\n};\r\n\r\nclass FormWizardValidation extends Component {\r\n    state = {\r\n        activeStep: '1',\r\n\r\n        /* Group each form state in an object.\r\n           Property name MUST match the form name */\r\n        formWizard: {\r\n            email: '',\r\n            userName: '',\r\n            password: '',\r\n            password2: '',\r\n            confirm: '',\r\n            fname: '',\r\n            surname: '',\r\n            address: '',\r\n            terms: false\r\n        }\r\n    };\r\n\r\n    toggleStep = activeStep => () => {\r\n        // For submit we can obtain the form from the event\r\n        // but for each step we need a global ref to the element\r\n        const form = this.formWizardRef;\r\n        // To validate only the inputs in the current steps, we use an id to query the tabPane\r\n        // and then find all form elements for the current step only.\r\n        const tabPane = document.getElementById('tabPane' + this.state.activeStep);\r\n        const inputs = [].slice.call(tabPane.querySelectorAll('input,select'));\r\n        // Run validation of inputs\r\n        const { errors, hasError } = FormValidator.bulkValidate(inputs);\r\n\r\n        // Update state so the validation message are shown/hidden\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                errors\r\n            }\r\n        });\r\n\r\n        // and prevent change the if form is not valid\r\n        if (!hasError) {\r\n            if (this.state.activeStep !== activeStep) {\r\n                this.setState({\r\n                    activeStep\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Validate input using onChange event\r\n     * @param  {String} formName The name of the form in the state object\r\n     * @return {Function} a function used for the event\r\n     */\r\n    validateOnChange = event => {\r\n        const input = event.target;\r\n        const form = input.form;\r\n        const value = input.type === 'checkbox' ? input.checked : input.value;\r\n\r\n        const result = FormValidator.validate(input);\r\n\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                [input.name]: value,\r\n                errors: {\r\n                    ...this.state[form.name].errors,\r\n                    [input.name]: result\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    /* Simplify error check */\r\n    hasError = (formName, inputName, method) => {\r\n        return (\r\n            this.state[formName] &&\r\n            this.state[formName].errors &&\r\n            this.state[formName].errors[inputName] &&\r\n            this.state[formName].errors[inputName][method]\r\n        );\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const target = event.currentTarget;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        const form = e.target;\r\n        const inputs = [...form.elements].filter(i => ['INPUT', 'SELECT'].includes(i.nodeName));\r\n\r\n        const { errors, hasError } = FormValidator.bulkValidate(inputs);\r\n\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                errors\r\n            }\r\n        });\r\n\r\n        console.log(hasError ? 'Form has errors. Check!' : 'Form Submitted!');\r\n\r\n        e.preventDefault();\r\n    };\r\n\r\n    // Keep a reference to the form to access from the steps methods\r\n    formRef = node => (this.formWizardRef = node);\r\n\r\n    render() {\r\n        return (\r\n            <Form innerRef={this.formRef} name=\"formWizard\" onSubmit={this.handleSubmit}>\r\n                <Card className=\"card-default\">\r\n                    <CardHeader>Basic Form (with Validation)</CardHeader>\r\n                    <CardBody>\r\n                        <Nav pills justified={true}>\r\n                            <NavItem style={stepNavitemStyle}>\r\n                                <NavLink\r\n                                    tag=\"div\"\r\n                                    className={classnames({\r\n                                        active: this.state.activeStep === '1'\r\n                                    })}\r\n                                    onClick={this.toggleStep('1')}\r\n                                >\r\n                                    <h4 className=\"text-left my-3\">\r\n                                        1. Account\r\n                                        <br />\r\n                                        <small>Nam egestas, leo eu gravida tincidunt</small>\r\n                                    </h4>\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem style={stepNavitemStyle}>\r\n                                <NavLink\r\n                                    tag=\"div\"\r\n                                    className={classnames({\r\n                                        active: this.state.activeStep === '2'\r\n                                    })}\r\n                                    onClick={this.toggleStep('2')}\r\n                                >\r\n                                    <h4 className=\"text-left my-3\">\r\n                                        2. Profile\r\n                                        <br />\r\n                                        <small>Nam egestas, leo eu gravida tincidunt</small>\r\n                                    </h4>\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem style={stepNavitemStyle}>\r\n                                <NavLink\r\n                                    tag=\"div\"\r\n                                    className={classnames({\r\n                                        active: this.state.activeStep === '3'\r\n                                    })}\r\n                                    onClick={this.toggleStep('3')}\r\n                                >\r\n                                    <h4 className=\"text-left my-3\">\r\n                                        3. Hints\r\n                                        <br />\r\n                                        <small>Nam egestas, leo eu gravida tincidunt</small>\r\n                                    </h4>\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem style={stepNavitemStyle}>\r\n                                <NavLink\r\n                                    tag=\"div\"\r\n                                    className={classnames({\r\n                                        active: this.state.activeStep === '4'\r\n                                    })}\r\n                                    onClick={this.toggleStep('4')}\r\n                                >\r\n                                    <h4 className=\"text-left my-3\">\r\n                                        4. Finish\r\n                                        <br />\r\n                                        <small>Nam egestas, leo eu gravida tincidunt</small>\r\n                                    </h4>\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </CardBody>\r\n                    <TabContent activeTab={this.state.activeStep}>\r\n                        <TabPane id=\"tabPane1\" tabId=\"1\">\r\n                            <div className=\"pt-3 mb-3\">\r\n                                <fieldset>\r\n                                    <label htmlFor=\"userName\">User name *</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"userName\"\r\n                                        name=\"userName\"\r\n                                        onChange={this.validateOnChange}\r\n                                        invalid={this.hasError(\r\n                                            'formWizard',\r\n                                            'userName',\r\n                                            'required'\r\n                                        )}\r\n                                        value={this.state.formWizard.userName}\r\n                                        data-validate='[\"required\"]'\r\n                                    />\r\n                                    <span className=\"invalid-feedback\">Field is required</span>\r\n                                    <label htmlFor=\"password\">Password *</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        invalid={this.hasError(\r\n                                            'formWizard',\r\n                                            'password',\r\n                                            'required'\r\n                                        )}\r\n                                        onChange={this.validateOnChange}\r\n                                        value={this.state.formWizard.password}\r\n                                        data-validate='[\"required\"]'\r\n                                    />\r\n                                    <span className=\"invalid-feedback\">Field is required</span>\r\n                                    <label htmlFor=\"password2\">Confirm Password *</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"password2\"\r\n                                        name=\"password2\"\r\n                                        invalid={this.hasError(\r\n                                            'formWizard',\r\n                                            'password2',\r\n                                            'equalto'\r\n                                        )}\r\n                                        onChange={this.validateOnChange}\r\n                                        data-validate='[\"equalto\"]'\r\n                                        data-param=\"password\"\r\n                                        value={this.state.formWizard.password2}\r\n                                    />\r\n                                    <span className=\"invalid-feedback\">\r\n                                        Field must be equal to previous\r\n                                    </span>\r\n                                    <p>(*) Mandatory</p>\r\n                                </fieldset>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"d-flex\">\r\n                                {/*<Button color=\"secondary\">Previous</Button>*/}\r\n                                <Button\r\n                                    className=\"ml-auto\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.toggleStep('2')}\r\n                                >\r\n                                    Next\r\n                                </Button>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane id=\"tabPane2\" tabId=\"2\">\r\n                            <div className=\"pt-3 mb-3\">\r\n                                <fieldset>\r\n                                    <label htmlFor=\"fname\">First name *</label>\r\n                                    <Input\r\n                                        id=\"fname\"\r\n                                        onChange={this.validateOnChange}\r\n                                        invalid={this.hasError('formWizard', 'fname', 'required')}\r\n                                        value={this.state.formWizard.fname}\r\n                                        name=\"fname\"\r\n                                        type=\"text\"\r\n                                        data-validate='[\"required\"]'\r\n                                    />\r\n                                    <span className=\"invalid-feedback\">Field is required</span>\r\n                                    <label htmlFor=\"surname\">Last name *</label>\r\n                                    <Input\r\n                                        id=\"surname\"\r\n                                        onChange={this.validateOnChange}\r\n                                        value={this.state.surname}\r\n                                        invalid={this.hasError('formWizard', 'surname', 'required')}\r\n                                        name=\"surname\"\r\n                                        type=\"text\"\r\n                                        data-validate='[\"required\"]'\r\n                                    />\r\n                                    <span className=\"invalid-feedback\">Field is required</span>\r\n                                    <label htmlFor=\"email\">Email *</label>\r\n                                    <Input\r\n                                        id=\"email\"\r\n                                        onChange={this.validateOnChange}\r\n                                        value={this.state.email}\r\n                                        name=\"email\"\r\n                                        type=\"text\"\r\n                                        invalid={\r\n                                            this.hasError('formWizard', 'email', 'required') ||\r\n                                            this.hasError('formWizard', 'email', 'email')\r\n                                        }\r\n                                        data-validate='[\"required\", \"email\"]'\r\n                                        className=\"required email\"\r\n                                    />\r\n                                    {this.hasError('formWizard', 'email', 'required') && (\r\n                                        <span className=\"invalid-feedback\">Field is required</span>\r\n                                    )}\r\n                                    {this.hasError('formWizard', 'email', 'email') && (\r\n                                        <span className=\"invalid-feedback\">\r\n                                            Field must be valid email\r\n                                        </span>\r\n                                    )}\r\n                                    <label htmlFor=\"address\">Address</label>\r\n                                    <Input\r\n                                        id=\"address\"\r\n                                        onChange={this.validateOnChange}\r\n                                        value={this.state.address}\r\n                                        name=\"address\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <p>(*) Mandatory</p>\r\n                                </fieldset>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"d-flex\">\r\n                                <Button color=\"secondary\" onClick={this.toggleStep('1')}>\r\n                                    Previous\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"ml-auto\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.toggleStep('3')}\r\n                                >\r\n                                    Next\r\n                                </Button>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane id=\"tabPane3\" tabId=\"3\">\r\n                            <div className=\"pt-3 mb-3\">\r\n                                <fieldset>\r\n                                    <p className=\"lead text-center\">Almost there!</p>\r\n                                </fieldset>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"d-flex\">\r\n                                <Button color=\"secondary\" onClick={this.toggleStep('2')}>\r\n                                    Previous\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"ml-auto\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.toggleStep('4')}\r\n                                >\r\n                                    Next\r\n                                </Button>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane id=\"tabPane4\" tabId=\"4\">\r\n                            <div className=\"pt-3 mb-3\">\r\n                                <fieldset>\r\n                                    <p className=\"lead\">One last check</p>\r\n                                    <CustomInput\r\n                                        type=\"checkbox\"\r\n                                        id=\"terms\"\r\n                                        name=\"terms\"\r\n                                        label=\"I agree with the terms and conditions\"\r\n                                        invalid={this.hasError('formWizard', 'terms', 'required')}\r\n                                        onChange={this.validateOnChange}\r\n                                        data-validate='[\"required\"]'\r\n                                        checked={this.state.formWizard.terms}\r\n                                    >\r\n                                        <span className=\"invalid-feedback\">Field is required</span>\r\n                                    </CustomInput>\r\n                                </fieldset>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"d-flex\">\r\n                                <Button color=\"secondary\" onClick={this.toggleStep('3')}>\r\n                                    Previous\r\n                                </Button>\r\n                                <Button className=\"ml-auto\" color=\"primary\" type=\"submit\">\r\n                                    Finish\r\n                                </Button>\r\n                            </div>\r\n                        </TabPane>\r\n                    </TabContent>\r\n                </Card>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormWizardValidation;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    TabContent,\r\n    TabPane,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Button,\r\n    Row,\r\n    Col\r\n} from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nconst stepNavitemStyle = {\r\n    backgroundColor: '#fcfcfc'\r\n};\r\n\r\nclass FormWizardVertical extends Component {\r\n    state = {\r\n        activeStep: '1'\r\n    };\r\n\r\n    toggleStep = activeStep => () => {\r\n        if (this.state.activeStep !== activeStep) {\r\n            this.setState({\r\n                activeStep\r\n            });\r\n        }\r\n    };\r\n\r\n    done = () => {\r\n        alert('Custom message without form submission.');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"card-default\">\r\n                <CardHeader>Vertical Example (without validation)</CardHeader>\r\n                <CardBody>\r\n                    <Row>\r\n                        <Col xs=\"4\">\r\n                            <Nav pills vertical={true}>\r\n                                <NavItem style={stepNavitemStyle}>\r\n                                    <NavLink\r\n                                        tag=\"div\"\r\n                                        className={classnames({\r\n                                            active: this.state.activeStep === '1'\r\n                                        })}\r\n                                        onClick={this.toggleStep('1')}\r\n                                    >\r\n                                        <h4 className=\"text-left my-3\">1. First Step</h4>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem style={stepNavitemStyle}>\r\n                                    <NavLink\r\n                                        tag=\"div\"\r\n                                        className={classnames({\r\n                                            active: this.state.activeStep === '2'\r\n                                        })}\r\n                                        onClick={this.toggleStep('2')}\r\n                                    >\r\n                                        <h4 className=\"text-left my-3\">2. Second Step</h4>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem style={stepNavitemStyle}>\r\n                                    <NavLink\r\n                                        tag=\"div\"\r\n                                        className={classnames({\r\n                                            active: this.state.activeStep === '3'\r\n                                        })}\r\n                                        onClick={this.toggleStep('3')}\r\n                                    >\r\n                                        <h4 className=\"text-left my-3\">3. Third Step</h4>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Col>\r\n                        <Col xs=\"8\">\r\n                            <TabContent activeTab={this.state.activeStep} className=\"border-0\">\r\n                                <TabPane tabId=\"1\">\r\n                                    <div className=\"pt-3 mb-3\">\r\n                                        <fieldset>\r\n                                            <h2>Step 1</h2>\r\n                                            <p className=\"lead\">\r\n                                                Nunc pharetra, elit ut lobortis vehicula, nisl metus\r\n                                                tincidunt mauris, vitae accumsan arcu justo sit amet\r\n                                                odio.{' '}\r\n                                            </p>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"d-flex\">\r\n                                        {/*<Button color=\"secondary\">Previous</Button>*/}\r\n                                        <Button\r\n                                            className=\"ml-auto\"\r\n                                            color=\"primary\"\r\n                                            onClick={this.toggleStep('2')}\r\n                                        >\r\n                                            Next\r\n                                        </Button>\r\n                                    </div>\r\n                                </TabPane>\r\n                                <TabPane tabId=\"2\">\r\n                                    <div className=\"pt-3 mb-3\">\r\n                                        <fieldset>\r\n                                            <h2>Step 2</h2>\r\n                                            <p className=\"lead\">\r\n                                                Nunc pharetra, elit ut lobortis vehicula, nisl metus\r\n                                                tincidunt mauris, vitae accumsan arcu justo sit amet\r\n                                                odio.{' '}\r\n                                            </p>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"d-flex\">\r\n                                        <Button color=\"secondary\" onClick={this.toggleStep('1')}>\r\n                                            Previous\r\n                                        </Button>\r\n                                        <Button\r\n                                            className=\"ml-auto\"\r\n                                            color=\"primary\"\r\n                                            onClick={this.toggleStep('3')}\r\n                                        >\r\n                                            Next\r\n                                        </Button>\r\n                                    </div>\r\n                                </TabPane>\r\n                                <TabPane tabId=\"3\">\r\n                                    <div className=\"pt-3 mb-3\">\r\n                                        <fieldset>\r\n                                            <h2>Step 3</h2>\r\n                                            <p className=\"lead\">\r\n                                                Nunc pharetra, elit ut lobortis vehicula, nisl metus\r\n                                                tincidunt mauris, vitae accumsan arcu justo sit amet\r\n                                                odio.{' '}\r\n                                            </p>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"d-flex\">\r\n                                        <Button color=\"secondary\" onClick={this.toggleStep('2')}>\r\n                                            Previous\r\n                                        </Button>\r\n                                        <Button\r\n                                            className=\"ml-auto\"\r\n                                            color=\"primary\"\r\n                                            onClick={this.done}\r\n                                        >\r\n                                            Done\r\n                                        </Button>\r\n                                    </div>\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormWizardVertical;\r\n","import React, { Component } from 'react';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\n\r\nimport FormWizardValidation from './FormWizard.Validation.js';\r\nimport FormWizardVertical from './FormWizard.Vertical.js';\r\n\r\nclass FormWizard extends Component {\r\n    render() {\r\n        return (\r\n            <ContentWrapper>\r\n                <div className=\"content-heading\">\r\n                    <div>\r\n                        Form Wizard\r\n                        <small>Native form wizard with validation powered by Reactstrap</small>\r\n                    </div>\r\n                </div>\r\n\r\n                <FormWizardValidation />\r\n\r\n                <FormWizardVertical />\r\n            </ContentWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormWizard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","// https://github.com/chriso/validator.js\r\nimport validator from 'validator';\r\n\r\n/**\r\n * Helper methods to validate form inputs\r\n * using controlled components\r\n */\r\nconst FormValidator = {\r\n    /**\r\n     * Validate input element\r\n     * @param element Dome element of the input\r\n     * Uses the following attributes\r\n     *     data-validate: array in json format with validation methods\r\n     *     data-param: used to provide arguments for certain methods.\r\n     */\r\n    validate(element) {\r\n\r\n        const isCheckbox = element.type === 'checkbox';\r\n        const value = isCheckbox ? element.checked : element.value;\r\n        const name = element.name;\r\n\r\n        if (!name) throw new Error('Input name must not be empty.');\r\n\r\n        // use getAttribute to support IE10+\r\n        const param = element.getAttribute('data-param');\r\n        const validations = JSON.parse(element.getAttribute('data-validate'));\r\n\r\n        let result = []\r\n        if(validations && validations.length) {\r\n            /*  Result of each validation must be true if the input is invalid\r\n                and false if valid. */\r\n            validations.forEach(m => {\r\n                switch (m) {\r\n                    case 'required':\r\n                        result[m] = isCheckbox ? value === false : validator.isEmpty(value)\r\n                        break;\r\n                    case 'email':\r\n                        result[m] = !validator.isEmail(value)\r\n                        break;\r\n                    case 'number':\r\n                        result[m] = !validator.isNumeric(value)\r\n                        break;\r\n                    case 'integer':\r\n                        result[m] = !validator.isInt(value)\r\n                        break;\r\n                    case 'alphanum':\r\n                        result[m] = !validator.isAlphanumeric(value)\r\n                        break;\r\n                    case 'url':\r\n                        result[m] = !validator.isURL(value)\r\n                        break;\r\n                    case 'equalto':\r\n                        // here we expect a valid ID as param\r\n                        const value2 = document.getElementById(param).value;\r\n                        result[m] = !validator.equals(value, value2)\r\n                        break;\r\n                    case 'minlen':\r\n                        result[m] = !validator.isLength(value, { min: param })\r\n                        break;\r\n                    case 'maxlen':\r\n                        result[m] = !validator.isLength(value, { max: param })\r\n                        break;\r\n                    case 'len':\r\n                        const [min, max] = JSON.parse(param)\r\n                        result[m] = !validator.isLength(value, { min, max })\r\n                        break;\r\n                    case 'min':\r\n                        result[m] = !validator.isInt(value, { min: validator.toInt(param) })\r\n                        break;\r\n                    case 'max':\r\n                        result[m] = !validator.isInt(value, { max: validator.toInt(param) })\r\n                        break;\r\n                    case 'list':\r\n                        const list = JSON.parse(param)\r\n                        result[m] = !validator.isIn(value, list)\r\n                        break;\r\n                    default:\r\n                        throw new Error('Unrecognized validator.');\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /**\r\n     * Bulk validation of input elements.\r\n     * Used with form elements collection.\r\n     * @param  {Array} inputs Array for DOM element\r\n     * @return {Object}       Contains array of error and a flag to\r\n     *                        indicate if there was a validation error\r\n     */\r\n    bulkValidate(inputs) {\r\n        let errors = {},\r\n            hasError = false;\r\n\r\n        inputs.forEach(input => {\r\n            let result = this.validate(input)\r\n            errors = { ...errors, [input.name]: result }\r\n            if (!hasError) hasError = Object.keys(result).some(val => result[val])\r\n        })\r\n\r\n        return {\r\n            errors,\r\n            hasError\r\n        }\r\n    }\r\n}\r\n\r\nexport default FormValidator;"],"sourceRoot":""}